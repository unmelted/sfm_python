{
    "create_command_db": "CREATE TABLE IF NOT EXISTS command (no SERIAL PRIMARY KEY NOT NULL, datetime TIMESTAMP DEFAULT NOW(), job_id INTEGER NOT NULL, parent_job INTEGER, vent_id TEXT, requestor TEXT NOT NULL, task TEXT NOT NULL, input_path TEXT, mode TEXT, cam_list TEXT, status INTEGER , root_path TEXT, image_pair1 TEXT, image_pair2 TEXT, result_id INTEGER, result_msg TEXT, terminate INTEGER);",
    "create_request_history": "CREATE TABLE IF NOT EXISTS request_history (datetime TIMESTAMP DEFAULT NOW(), job_id INTEGER NOT NULL, requestor TEXT,  task TEXT, etc TEXT);",
    "create_job_manager": "CREATE TABLE IF NOT EXISTS job_manager (job_id INTEGER PRIMARY KEY, pid1 TEXT, pid2 TEXT, cancel TEXT, cancel_date TIMESTAMP, complete TEXT, complete_date TIMESTAMP);",
    "create_generate_data": "CREATE TABLE IF NOT EXISTS calib_data (job_id INTEGER PRIMARY KEY, datetime TIMESTAMP DEFAULT NOW(), result JSON );",
    "query_root_path": "SELECT root_path FROM command where job_id = ",
    "query_root_path_ex": " ORDER BY datetime DESC ",
    "query_job_id": "SELECT job_id FROM command ORDER BY job_id DESC",
    "query_status": "SELECT status, result_id FROM command where job_id = ",
    "query_getpair": "SELECT image_pair1, image_pair2 FROM command where job_id = ",
    "query_gettarget": "SELECT input_path FROM command where job_id = ",
    "query_countactivejobs": "SELECT count(*) from job_manager WHERE complete='running'",
    "query_getactivejobs": "SELECT job_id, pid1, pid2 from job_manager WHERE complete='running'",
    "query_getcanceljobs": "SELECT job_id from job_manager WHERE cancel='try'",
    "query_deletejobs": "DELETE FROM job_manager WHERE job_id = ",
    "query_jobstatusforcancel": "SELECT cancel, complete, pid2 FROM job_manager WHERE job_id = ",
    "query_getpts": "SELECT result FROM calib_data where job_id = "
}